homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        package: 'freenas'
      freenas_rest_sensor: &freenas_rest_sensor
        username: !secret freenas_username
        password: !secret freenas_password
        authentication: basic
        headers:
          Content-Type: application/json
      freenas_rest_sensor_token: &freenas_rest_sensor_token
        headers:
          Authorization: !secret freenas_authorization
    
    sensor.freenas_tank_report:
      <<: *customize
      friendly_name: FreeNAS - Volume Status - Tank
      
    sensor.freenas_tank_pct_used:
      <<: *customize
      friendly_name: FreeNAS - Volume % Free - Tank
      
    sensor.freenas_alert_level:
      <<: *customize
      friendly_name: FreeNAS - Alert Level
      
    sensor.freenas_alert_message:
      <<: *customize
      friendly_name: FreeNAS - Alert Message
      
    sensor.freenas_version:
      <<: *customize
      friendly_name: FreeNAS - Version
      
    sensor.freenas_resilver_time_remaining:
      <<: *customize
      
    sensor.freenas_resilver_etc:
      <<: *customize
      friendly_name: FreeNAS - Resilver Estimated Time To Completion
      
    binary_sensor.freenas_network_status:
      <<: *customize
      friendly_name: FreeNAS Network Connection
      device_class: connectivity

    binary_sensor.freenas_online:
      <<: *customize
      friendly_name: FreeNAS Online

    binary_sensor.dockervm_online:
      <<: *customize
      friendly_name: DockerVM Online

    sensor.freenas_ready:
      <<: *customize
      friendly_name: FreeNAS Ready State


### migration plan after upgrading to TrueNAS 12 (1.0 API deprecated)
# [ ] add hass-truenas integration in HACS
# [ ] get status and % used for tank pool from 2.0 endpoints for sensor.freenas_tank_report
# [ ] get all alerts from 2.0 endpoints
# [ ] get freenas version from 2.0 endpoints
# [ ] switch all existing 2.0 endpoints to bearer auth tokens

template:
  - binary_sensor:
    - name: freenas_online
      device_class: connectivity
      state: >
        {{ states("sensor.freenas_ready") == "true" and is_state("binary_sensor.freenas_network_status","on") }}
    - name: dockervm_online
      device_class: connectivity
      state: >
        {{ states("sensor.freenas_dockervm_status") == "RUNNING" }}

binary_sensor:
  - platform: ping
    name: freenas_network_status
    host: 192.168.1.16
    count: 2
    scan_interval: 30

sensor:
  - platform: rest
    <<: *freenas_rest_sensor
    name: freenas_tank_report
    json_attributes:
      - name
      - status
      - used_pct
      - is_decrypted
    resource: http://freenas.twohunnid/api/v1.0/storage/volume/tank/?format=json
    value_template: '{{ value_json.status }}'
      
  - platform: rest
    <<: *freenas_rest_sensor
    name: freenas_all_alerts
    resource: http://freenas.twohunnid/api/v1.0/system/alert/?format=json
    value_template: >
      {{ value_json.objects | length }}
    json_attributes:
      - objects
    
  - platform: rest
    <<: *freenas_rest_sensor
    name: freenas_version
    json_attributes:
      - fullversion
      - name
      - version
    resource: http://freenas.twohunnid/api/v1.0/system/version/?format=json
    value_template: '{{ value_json.fullversion }}'

  - platform: rest
    <<: *freenas_rest_sensor
    method: POST
    resource: http://freenas.twohunnid/api/v2.0/disk/temperatures
    payload: '{"names":["ada0", "ada1", "ada2", "ada3"],"powermode":"NEVER"}'
    name: freenas_disk_temps
    json_attributes:
      - ada0
      - ada1
      - ada2
      - ada3

  - platform: rest
    <<: *freenas_rest_sensor_token
    method: GET
    resource: http://freenas.twohunnid/api/v2.0/system/ready
    name: freenas_ready

  - platform: rest
    <<: *freenas_rest_sensor_token
    method: GET
    resource: http://freenas.twohunnid/api/v2.0/system/info
    name: freenas_info

  - platform: rest
    <<: *freenas_rest_sensor_token
    method: POST
    resource: http://freenas.twohunnid/api/v2.0/vm/id/1/status
    name: freenas_dockervm_status
    value_template: "{{ value_json.state }}"

  - platform: template
    sensors:
      freenas_tank_pct_used:
        value_template: "{{ state_attr('sensor.freenas_tank_report','used_pct').title() }}"
        entity_id: sensor.freenas_tank_report
      freenas_resilver_etc:
        value_template: '{{ (now().strftime("%s") | int(default=0) + (states("sensor.freenas_resilver_time_remaining") | int(default=0))) | timestamp_custom("%m/%d/%y %H:%M") }}'
        entity_id: sensor.freenas_resilver_time_remaining
      freenas_active_alerts:
        value_template: >
          {{ state_attr('sensor.freenas_all_alerts','objects') | rejectattr('dismissed') | list | length }}
        attribute_templates:
          alerts: "{{ state_attr('sensor.freenas_all_alerts','objects') | rejectattr('dismissed') | sort(attribute='timestamp',reverse=True) | list }}"
      freenas_alert_level:
        value_template: "{% if state_attr('sensor.freenas_active_alerts','alerts') | list | length > 0 %}{{ (state_attr('sensor.freenas_active_alerts','alerts') | list | first).level }}{% else %}none{% endif %}"
        attribute_templates:
          message: "{% if state_attr('sensor.freenas_active_alerts','alerts') | list | length > 0 %}{{ (state_attr('sensor.freenas_active_alerts','alerts') | list | first).message }}{% else %}none{% endif %}"
          timestamp: "{% if state_attr('sensor.freenas_active_alerts','alerts') | list | length > 0 %}{{ (state_attr('sensor.freenas_active_alerts','alerts') | list | first).timestamp }}{% else %}0{% endif %}"
          level: "{% if state_attr('sensor.freenas_active_alerts','alerts') | list | length > 0 %}{{ (state_attr('sensor.freenas_active_alerts','alerts') | list | first).level }}{% else %}none{% endif %}"
      freenas_alert_message:
        entity_id: sensor.freenas_alert_level
        value_template: "{{ state_attr('sensor.freenas_alert_level','message') }}"
      freenas_disk_temp_ada0:
        unit_of_measurement: 'C째'
        value_template: "{{ state_attr('sensor.freenas_disk_temps','ada0') }}"
      freenas_disk_temp_ada1:
        unit_of_measurement: 'C째'
        value_template: "{{ state_attr('sensor.freenas_disk_temps','ada1') }}"
      freenas_disk_temp_ada2:
        unit_of_measurement: 'C째'
        value_template: "{{ state_attr('sensor.freenas_disk_temps','ada2') }}"
      freenas_disk_temp_ada3:
        unit_of_measurement: 'C째'
        value_template: "{{ state_attr('sensor.freenas_disk_temps','ada3') }}"