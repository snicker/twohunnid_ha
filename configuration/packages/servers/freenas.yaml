homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        package: 'freenas'
      freenas_rest_sensor: &freenas_rest_sensor
        username: !secret freenas_username
        password: !secret freenas_password
        authentication: basic
        headers:
          Content-Type: application/json
      freenas_rest_sensor_token: &freenas_rest_sensor_token
        headers:
          Authorization: !secret freenas_authorization

    binary_sensor.freenas_network_status:
      <<: *customize
      friendly_name: FreeNAS Network Connection
      device_class: connectivity

    binary_sensor.freenas_online:
      <<: *customize
      friendly_name: FreeNAS Online

    binary_sensor.dockervm_online:
      <<: *customize
      friendly_name: DockerVM Online

    sensor.freenas_ready:
      <<: *customize
      friendly_name: FreeNAS Ready State


### migration plan after upgrading to TrueNAS 12 (1.0 API deprecated)
# [ ] add hass-truenas integration in HACS
# [X] get status and % used for tank pool from 2.0 endpoints for sensor.freenas_tank_report
# [ ] get all alerts from 2.0 endpoints
# [X] get freenas version from 2.0 endpoints
# [ ] switch all existing 2.0 endpoints to bearer auth tokens

template:
  - binary_sensor:
    - name: freenas_online
      device_class: connectivity
      state: >
        {{ states("sensor.freenas_ready") == "true" and is_state("binary_sensor.freenas_network_status","on") }}
    - name: dockervm_online
      device_class: connectivity
      state: >
        {{ states("sensor.freenas_dockervm_status") == "RUNNING" and is_state("binary_sensor.dockervm_network_status","on") }}

sensor:
  # pool sensors
  # tank status
  - platform: rest
    <<: *freenas_rest_sensor_token
    method: GET
    resource: http://192.168.1.16/api/v2.0/pool/id/6
    name: freenas_pool_status_tank
    value_template: "{{ value_json.status }}"
    json_attributes:
      - name
      - scan
  # tank dataset details
  - platform: rest
    <<: *freenas_rest_sensor_token
    method: GET
    resource: http://192.168.1.16/api/v2.0/pool/dataset/id/tank
    name: freenas_dataset_status_tank
    value_template: "{{ value_json.name }}"
    json_attributes:
      - used
      - available
  # media status
  - platform: rest
    <<: *freenas_rest_sensor_token
    method: GET
    resource: http://192.168.1.16/api/v2.0/pool/id/8
    name: freenas_pool_status_media
    value_template: "{{ value_json.status }}"
    json_attributes:
      - name
      - scan
  # media dataset details
  - platform: rest
    <<: *freenas_rest_sensor_token
    method: GET
    resource: http://192.168.1.16/api/v2.0/pool/dataset/id/media
    name: freenas_dataset_status_media
    value_template: "{{ value_json.name }}"
    json_attributes:
      - used
      - available

  - platform: rest
    <<: *freenas_rest_sensor
    method: POST
    resource: http://192.168.1.16/api/v2.0/disk/temperatures
    payload: '{"names":["da4", "da5", "da6", "da7","da0","da1","da2","da3"],"powermode":"NEVER"}'
    name: freenas_disk_temps
    json_attributes:
      - da4
      - da5
      - da6
      - da7
      - da0
      - da1
      - da2
      - da3

  - platform: rest
    <<: *freenas_rest_sensor_token
    method: GET
    resource: http://192.168.1.16/api/v2.0/system/ready
    name: freenas_ready
    value_template: >-
      {% if value_json is defined %}
        {{ value_json }}
      {% else %}
        {{ states.sensor['freenas_ready'].state }}
      {% endif %}

  - platform: rest
    <<: *freenas_rest_sensor_token
    method: GET
    resource: http://192.168.1.16/api/v2.0/system/info
    name: freenas_info
    value_template: "{{ value_json.version }}"
    json_attributes:
      - loadavg
      - uptime
      - uptime_seconds
      - model
      - hostname
      - system_product
      - system_manufacturer

  - platform: rest
    <<: *freenas_rest_sensor_token
    method: POST
    resource: http://192.168.1.16/api/v2.0/vm/id/1/status
    name: freenas_dockervm_status
    value_template: >-
      {% if value_json is defined and value_json.state is defined %}
        {{ value_json.state }}
      {% else %}
        {{ states.sensor['freenas_dockervm_status'].state }}
      {% endif %}

  - platform: template
    sensors:
      freenas_tank_pct_used:
        value_template: >
          {% set sensor = 'sensor.freenas_dataset_status_tank' %}
          {% set available = state_attr(sensor,'available').parsed | int %}
          {% set used = state_attr(sensor,'used').parsed | int %}
          {{ (used * 100 / ( available + used )) | round(2) }}
        unit_of_measurement: "%"
        unique_id: freenas_tank_pct_used
      freenas_media_pct_used:
        value_template: >
          {% set sensor = 'sensor.freenas_dataset_status_media' %}
          {% set available = state_attr(sensor,'available').parsed | int %}
          {% set used = state_attr(sensor,'used').parsed | int %}
          {{ (used * 100 / ( available + used )) | round(2) }}
        unit_of_measurement: "%"
        unique_id: freenas_media_pct_used
      freenas_disk_temp_ada0:
        unit_of_measurement: 'C°'
        value_template: "{{ state_attr('sensor.freenas_disk_temps','da4') }}"
        unique_id: freenas_disk_temp_ada0
      freenas_disk_temp_ada1:
        unit_of_measurement: 'C°'
        value_template: "{{ state_attr('sensor.freenas_disk_temps','da5') }}"
        unique_id: freenas_disk_temp_ada1
      freenas_disk_temp_ada2:
        unit_of_measurement: 'C°'
        value_template: "{{ state_attr('sensor.freenas_disk_temps','da6') }}"
        unique_id: freenas_disk_temp_ada2
      freenas_disk_temp_ada3:
        unit_of_measurement: 'C°'
        value_template: "{{ state_attr('sensor.freenas_disk_temps','da7') }}"
        unique_id: freenas_disk_temp_ada3
      freenas_disk_temp_da0:
        unit_of_measurement: 'C°'
        value_template: "{{ state_attr('sensor.freenas_disk_temps','da0') }}"
        unique_id: freenas_disk_temp_da0
      freenas_disk_temp_da1:
        unit_of_measurement: 'C°'
        value_template: "{{ state_attr('sensor.freenas_disk_temps','da1') }}"
        unique_id: freenas_disk_temp_da1
      freenas_disk_temp_da2:
        unit_of_measurement: 'C°'
        value_template: "{{ state_attr('sensor.freenas_disk_temps','da2') }}"
        unique_id: freenas_disk_temp_da2
      freenas_disk_temp_da3:
        unit_of_measurement: 'C°'
        value_template: "{{ state_attr('sensor.freenas_disk_temps','da3') }}"
        unique_id: freenas_disk_temp_da3