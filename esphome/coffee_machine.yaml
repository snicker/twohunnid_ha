# .plan
# should automatically turn off after 3 hours
# should never turn on after power outage
# short press turns on immediately
# press and hold:
#   if no timer set:
#     for each second held down, add 15 mins to a timer
#     blink blue X times for each 15 min interval after release
#     start a timer to turn on the relay
#     blink 2x per second every 5s until timer goes off
#   if timer set:
#     anything greater than 1s, reset timer
#     blink 3x red
# 

substitutions:
  plug_name: CoffeeMachine
  # Higher value gives lower watt readout
  current_res: "0.00221"
  # Lower value gives lower voltage readout
  voltage_div: "940"
esphome:
  name: ${plug_name}
  platform: ESP8266
  board: esp8285

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: coffee_machine
    password: coffee_machine

captive_portal:


# Enable Home Assistant API
api:
  password: !secret ota_api_password

ota:
  password: !secret ota_api_password
# Enable logging
logger:
# Enable Web server
web_server:
  port: 80
  
time:
  - platform: homeassistant
    id: homeassistant_time
    
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO3
      inverted: True
    name: "${plug_name}_button"
    on_press:
      then:
        - switch.toggle: relay1
        
switch:
- platform: gpio
  id: relay1
  name: "${plug_name}_switch"
  pin: GPIO14
  restore_mode: ALWAYS_OFF
- platform: gpio
  name: "${plug_name}_LED_Red"
  pin: GPIO1
  inverted: True
  restore_mode: ALWAYS_OFF
- platform: gpio
  name: "${plug_name}_LED_Blue"
  pin: GPIO13
  inverted: True
  restore_mode: ALWAYS_OFF
sensor:
  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: True
    cf_pin: GPIO04
    cf1_pin: GPIO05
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    current:
      name: "${plug_name}_Amperage"
      unit_of_measurement: A
    voltage:
      name: "${plug_name}_Voltage"
      unit_of_measurement: V
    power:
      name: "${plug_name}_Wattage"
      unit_of_measurement: W
      id: "${plug_name}_Wattage"
    change_mode_every: 8
    update_interval: 10s
  - platform: total_daily_energy
    name: "${plug_name}_Total Daily Energy"
    power_id: "${plug_name}_Wattage"
    filters:
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
    unit_of_measurement: kWh
      
# Extra sensor to keep track of plug uptime
  - platform: uptime
    name: ${plug_name}_Uptime Sensor